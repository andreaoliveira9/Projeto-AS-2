service:
    extensions: [jaeger_storage, jaeger_query]
    pipelines:
        traces:
            receivers: [otlp]
            processors: [batch]
            exporters: [jaeger_storage_exporter, spanmetrics]
        metrics/spanmetrics:
            receivers: [spanmetrics]
            exporters: [prometheus]
    telemetry:
        resource:
            service.name: jaeger
        metrics:
            level: detailed
            readers:
                - pull:
                      exporter:
                          prometheus:
                              host: 0.0.0.0
                              port: 8888
        logs:
            level: INFO

extensions:
    jaeger_query:
        storage:
            traces: some_storage
            metrics: some_metrics_storage
    jaeger_storage:
        backends:
            some_storage:
                memory:
                    max_traces: 100000
        metric_backends:
            some_metrics_storage:
                prometheus:
                    endpoint: http://mvcweb-prometheus:9090
                    normalize_calls: true
                    normalize_duration: true

connectors:
    spanmetrics:
        histogram:
            explicit:
                buckets: [100us, 1ms, 2ms, 6ms, 10ms, 100ms, 250ms]
        dimensions:
            - name: http.method
              default: GET
            - name: http.status_code
        exemplars:
            enabled: true
        dimensions_cache_size: 1000
        aggregation_temporality: "AGGREGATION_TEMPORALITY_CUMULATIVE"
        metrics_flush_interval: 15s

receivers:
    otlp:
        protocols:
            grpc:
                endpoint: "0.0.0.0:4317"
            http:
                endpoint: "0.0.0.0:4318"

processors:
    batch:
        timeout: 10s

exporters:
    jaeger_storage_exporter:
        trace_storage: some_storage
    prometheus:
        endpoint: "0.0.0.0:8889"
        const_labels:
            environment: development