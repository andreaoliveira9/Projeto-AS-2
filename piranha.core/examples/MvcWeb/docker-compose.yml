
services:
  # MvcWeb Application
  mvcweb:
    build:
      context: ../..
      dockerfile: examples/MvcWeb/Dockerfile
    container_name: mvcweb-app
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=8080
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://mvcweb-otel-collector:4317
      - OTEL_SERVICE_NAME=mvcweb
      - OTEL_RESOURCE_ATTRIBUTES=service.version=1.0.0,deployment.environment=development
    depends_on:
      - jaeger
      - prometheus
      - grafana
      - rabbitmq
    networks:
      - telemetry

  # RabbitMQ for Audit service
  rabbitmq:
    image: rabbitmq:3-management
    container_name: mvcweb-rabbitmq
    ports:
      - "5673:5672"
      - "15673:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    networks:
      - telemetry

  # Jaeger for distributed tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: mvcweb-jaeger
    ports:
      - "6831:6831/udp"  # Jaeger agent
      - "16686:16686"    # Jaeger UI
      - "14268:14268"    # Jaeger collector
      - "4317:4317"      # OTLP gRPC receiver
      - "4318:4318"      # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - telemetry

  # Prometheus for metrics collection
  prometheus:
    image: prom/prometheus:latest
    container_name: mvcweb-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    networks:
      - telemetry

  # Grafana for visualization
  grafana:
    image: grafana/grafana:latest
    container_name: mvcweb-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
      - jaeger
    networks:
      - telemetry

  # OpenTelemetry Collector (optional but recommended)
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: mvcweb-otel-collector
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4319:4317"     # OTLP gRPC receiver
      - "8888:8888"     # Prometheus metrics exposed by the collector
      - "8889:8889"     # Prometheus exporter metrics
    depends_on:
      - jaeger
      - prometheus
    networks:
      - telemetry

networks:
  telemetry:
    driver: bridge

volumes:
  prometheus_data:
  grafana_data: