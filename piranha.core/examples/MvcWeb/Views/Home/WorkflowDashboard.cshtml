@{
    ViewData["Title"] = "Workflow Dashboard";
}

<div class="container mt-4">
    <h1>🚀 EditorialWorkflow Dashboard (MvcWeb)</h1>
    <p class="text-muted">Test your EditorialWorkflow implementation</p>
    
    <div class="row mb-4">
        <div class="col-md-4">
            <div class="card border-primary">
                <div class="card-header bg-primary text-white">
                    <h5><i class="fas fa-heartbeat"></i> Health Check</h5>
                </div>
                <div class="card-body">
                    <button id="healthCheck" class="btn btn-primary btn-block">Check Service Health</button>
                    <div id="healthResult" class="mt-3"></div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card border-success">
                <div class="card-header bg-success text-white">
                    <h5><i class="fas fa-cogs"></i> Create Workflow</h5>
                </div>
                <div class="card-body">
                    <button id="createWorkflow" class="btn btn-success btn-block">Create Sample Workflow</button>
                    <div id="createResult" class="mt-3"></div>
                </div>
            </div>
        </div>
        
        <div class="col-md-4">
            <div class="card border-info">
                <div class="card-header bg-info text-white">
                    <h5><i class="fas fa-play"></i> Create Instance</h5>
                </div>
                <div class="card-body">
                    <button id="createInstance" class="btn btn-info btn-block">Create Test Instance</button>
                    <div id="instanceResult" class="mt-3"></div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="row">
        <div class="col-12">
            <div class="card border-secondary">
                <div class="card-header bg-secondary text-white">
                    <h5><i class="fas fa-list"></i> Existing Workflows</h5>
                </div>
                <div class="card-body">
                    <button id="loadWorkflows" class="btn btn-secondary">Load All Workflows</button>
                    <div id="workflowsList" class="mt-3"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
const apiCall = async (url, method = 'GET') => {
    try {
        const response = await fetch(url, { method });
        const data = await response.json();
        return { success: response.ok, data };
    } catch (error) {
        return { success: false, error: error.message };
    }
};

const displayResult = (elementId, result, isSuccess = null) => {
    const alertClass = isSuccess === null 
        ? (result.success ? 'alert-success' : 'alert-danger')
        : (isSuccess ? 'alert-success' : 'alert-danger');
    
    const content = result.error 
        ? `Error: ${result.error}`
        : JSON.stringify(result.data || result, null, 2);
    
    document.getElementById(elementId).innerHTML = 
        `<div class="alert ${alertClass}"><pre>${content}</pre></div>`;
};

document.getElementById('healthCheck').addEventListener('click', async () => {
    const result = await apiCall('/api/test/health');
    displayResult('healthResult', result);
});

document.getElementById('createWorkflow').addEventListener('click', async () => {
    const result = await apiCall('/api/test/create-sample-workflow', 'POST');
    displayResult('createResult', result);
});

document.getElementById('createInstance').addEventListener('click', async () => {
    const result = await apiCall('/api/test/create-test-instance', 'POST');
    displayResult('instanceResult', result);
});

document.getElementById('loadWorkflows').addEventListener('click', async () => {
    const result = await apiCall('/api/test/workflows');
    displayResult('workflowsList', result);
});
</script>